package dao;

import java.util.List;

import org.hibernate.Session;
import org.springframework.orm.hibernate4.support.HibernateDaoSupport;

import config.Sessions;
import config.Song;
import config.Users;

public class SessionServiceImplement extends HibernateDaoSupport implements SessionDAO {
	
	@SuppressWarnings("unchecked")
	@Override
	public List<Song> selectSongByUserId(int idUser) {
		List<Song> listSong = (List<Song>) getHibernateTemplate().find("from Song where idUser= ? ", idUser);
		return listSong;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Song> logIn(String accountUser, String passwordUser) {
		Session session = getSessionFactory().openSession();
		String hql = "from Users where accountUser = ? and passwordUser = ?";
		List<Users> listUser = session.createQuery(hql).setString(0, accountUser).setParameter(1, passwordUser).list();
		if (listUser != null) {
			List<Song> listSong = (List<Song>) getHibernateTemplate().find("from Song where idUser= ? ", listUser.get(0).getIdUser());
			return listSong;
		} else
			return null;
	}

	

	@SuppressWarnings("unchecked")
	@Override
	public boolean isLogIn(String ip) {
		List<Users> listUsers = (List<Users>) getHibernateTemplate().find("from Session where sessionAccount= ? ", ip);
		if (listUsers.isEmpty())
			return false;
		else
			return true;
	}

	@SuppressWarnings("unchecked")
	@Override
	public int getUserId(String ip) {
		List<Sessions> listUser = (List<Sessions>) getHibernateTemplate().find("from Session where sessionAccount= ? ", ip);
		int userId = listUser.get(0).getSessionUserId();
		return userId;
	}

}
